(function() {var implementors = {};
implementors["coremidi"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Object.html\" title=\"struct coremidi::Object\">Object</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Device.html\" title=\"struct coremidi::Device\">Device</a>","synthetic":false,"types":["coremidi::device::Device"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Object.html\" title=\"struct coremidi::Object\">Object</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Destination.html\" title=\"struct coremidi::Destination\">Destination</a>","synthetic":false,"types":["coremidi::endpoints::destinations::Destination"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Endpoint.html\" title=\"struct coremidi::Endpoint\">Endpoint</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Destination.html\" title=\"struct coremidi::Destination\">Destination</a>","synthetic":false,"types":["coremidi::endpoints::destinations::Destination"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Object.html\" title=\"struct coremidi::Object\">Object</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Endpoint.html\" title=\"struct coremidi::Endpoint\">Endpoint</a>","synthetic":false,"types":["coremidi::endpoints::endpoint::Endpoint"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Object.html\" title=\"struct coremidi::Object\">Object</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Source.html\" title=\"struct coremidi::Source\">Source</a>","synthetic":false,"types":["coremidi::endpoints::sources::Source"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Endpoint.html\" title=\"struct coremidi::Endpoint\">Endpoint</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Source.html\" title=\"struct coremidi::Source\">Source</a>","synthetic":false,"types":["coremidi::endpoints::sources::Source"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.Object.html\" title=\"struct coremidi::Object\">Object</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.Entity.html\" title=\"struct coremidi::Entity\">Entity</a>","synthetic":false,"types":["coremidi::entity::Entity"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.EventList.html\" title=\"struct coremidi::EventList\">EventList</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.EventBuffer.html\" title=\"struct coremidi::EventBuffer\">EventBuffer</a>","synthetic":false,"types":["coremidi::events::EventBuffer"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.58.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"coremidi/struct.PacketList.html\" title=\"struct coremidi::PacketList\">PacketList</a>&gt; for <a class=\"struct\" href=\"coremidi/struct.PacketBuffer.html\" title=\"struct coremidi::PacketBuffer\">PacketBuffer</a>","synthetic":false,"types":["coremidi::packets::PacketBuffer"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()