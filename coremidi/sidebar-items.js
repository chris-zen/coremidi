initSidebarItems({"enum":[["Notification","A message describing a system state change. See MIDINotification."],["NotifyCallback",""],["ObjectType",""],["Protocol","The MIDI Protocol to use for messages"]],"fn":[["flush","Unschedules previously-sent packets for all the endpoints. See MIDIFlushOutput."],["restart","Stops and restarts MIDI I/O. See MIDIRestart."]],"struct":[["AddedRemovedInfo",""],["BooleanProperty","A MIDI object property which value is a Boolean"],["Client","A MIDI client."],["Destination","A MIDI source owned by an entity."],["Destinations","Destination endpoints available in the system."],["Device","A MIDI object."],["Endpoint","A MIDI source or source, owned by an entity. See MIDIEndpointRef."],["Entity","A MIDI object."],["EventBuffer",""],["EventList","A variable-length list of MIDI event packets See MIDIEventList"],["EventListIter",""],["EventPacket",""],["InputPort",""],["InputPortWithContext","An input MIDI port owned by a client."],["IntegerProperty","A MIDI object property which value is an Integer"],["IoErrorInfo",""],["Object","A MIDI Object."],["OutputPort","An output MIDI port owned by a client."],["Packet","A collection of simultaneous MIDI events. See MIDIPacket."],["PacketBuffer","A mutable `PacketList` builder."],["PacketList","A list of MIDI events being received from, or being sent to, one endpoint."],["PacketListIterator",""],["Properties","The set of properties that might be available for MIDI objects."],["PropertyChangedInfo",""],["Source","A MIDI source owned by an entity."],["Sources","Source endpoints available in the system."],["StringProperty","A MIDI object property which value is an String"],["VirtualDestination","A MIDI virtual destination owned by a client."],["VirtualSource","A MIDI virtual source owned by a client."]],"trait":[["PropertyGetter",""],["PropertySetter",""]],"type":[["Timestamp",""]]});